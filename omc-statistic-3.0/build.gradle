import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'

group = 'com.asiainfo.ais'
version = '0.0.1-SNAPSHOT'

description = """omc-statistic"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

allprojects {
    repositories {
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

sourceSets.main{
    java {
        srcDirs += ['src/main/sh']
    }
}



jar {
    manifest {
        attributes 'Implementation-Title': description
        attributes "Implementation-Version": version
        attributes "Main-Class" : "com.asiainfo.ais.omcstatistic.OmcStatisticApplication"
    }
}

task libs(type: Copy) {
    from configurations.runtime
    into "$buildDir/libs"
}

processResources(){
    filesNotMatching('**/*/logo*') {
        filter(ReplaceTokens,tokens: loadEnv());
        filter ReplaceTokens, tokens: [
                "version": version
        ]

        filter(FixCrLfFilter,
                eol: FixCrLfFilter.CrLf.newInstance('lf'),
                tab: FixCrLfFilter.AddAsisRemove.newInstance('asis'),
                tablength: 4,
                eof: FixCrLfFilter.AddAsisRemove.newInstance('remove'),
                fixlast: true)
    }
}

task processShell(type: Copy) {
    description = " copy shell scripts to buildDir/shell"
    from 'src/main/sh'
    into "$buildDir/sh"
    filter(ReplaceTokens,tokens: loadEnv());
    filter(FixCrLfFilter,
            eol: FixCrLfFilter.CrLf.newInstance('lf'),
            tab: FixCrLfFilter.AddAsisRemove.newInstance('asis'),
            tablength: 4,
            eof: FixCrLfFilter.AddAsisRemove.newInstance('remove'),
            fixlast: true)
}
processResources.dependsOn(processShell)
build.dependsOn(libs)

task deploy(type: Copy) {
    description = ' deploy all the binary and config files to destination(prefix) '
    def destFold=file("$prefix")
    into(destFold)
    from("$buildDir/libs"){
        into("libs")
    }
    from("$buildDir/sh"){
        into("sh")
    }
    doFirst{
        logger.lifecycle("deploy files to : $destFold")
    }
    doLast{
        logger.lifecycle("deploy success!")
    }
}

task preDeploy() << {
    description = ' pre actions for task deploy'
    def logsdir=file("$prefix/logs")
    if(!logsdir.exists()){
        logger.lifecycle("create logsdir  : $logsdir")
        logsdir.mkdirs();
    }else{
        logger.lifecycle("$logsdir  exists!")
    }
    def libs=fileTree("$prefix/libs")
    libs.each {jar ->
        jar.delete()
    }
}

deploy.dependsOn build
deploy.dependsOn preDeploy

task runServer(type: JavaExec) {
    main = 'com.asiainfo.ais.omcstatistic.OmcStatisticApplication'
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'2.0.4.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.46'
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version:'1.3.1'
    compile group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version:'1.2.4'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version:'1.3.2'
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.3'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.5'
//    compile group: 'com.oracle', name: 'ojdbc14', version:'10.2.0.4.0'
    compile group: 'com.oracle', name: 'ojdbc6', version:'11.2.0.3'
    compile group: 'org.springframework', name: 'spring-jdbc', version: "5.0.4.RELEASE"
    compile group: 'com.alibaba', name: 'druid', version: '1.1.2'

}
